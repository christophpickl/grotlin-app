
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

def versionRoboguice = "3.0.1"

sourceSets {
//    main { compileClasspath += configurations.provided }
    unitTest {
        java.srcDir file('src/test/java')
        resources.srcDir file('src/test/resources')
    }
}

configurations {
    all*.exclude group: 'org.apache.httpcomponents', module: 'httpclient'

    unitTestCompile.extendsFrom runtime
    unitTestRuntime.extendsFrom unitTestCompile
//    provided
}


dependencies {
    compile (project(':logic')) {
        exclude group: 'ch.qos.logback', module: 'logback-classic'
//        exclude group: 'ch.qos.logback', module: 'logback-core'
        exclude group: 'javax.inject', module: 'javax.inject'
        exclude group: 'com.google.inject', module: 'guice'
    }

    // https://hc.apache.org/httpcomponents-client-4.3.x/android-port.html
    compile 'org.apache.httpcomponents:httpclient-android:4.3.5'

    // http://www.slf4j.org/android/
    compile 'org.slf4j:slf4j-android:1.7.7'

    // WARNING: Dependency org.apache.httpcomponents:httpclient:4.3.6 is ignored for debug as it may be conflicting with the internal version provided by Android.
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile 'com.google.code.findbugs:jsr305:1.3.9' // for the optional Nullable annotation

    compile "org.roboguice:roboguice:${versionRoboguice}"
    compile "org.roboguice:roboblender:${versionRoboguice}" // should be provided ... :-/
    // test 'org.robolectric:robolectric:3.0.1'

//    unitTestCompile files("$project.buildDir/tmp/kotlin-classes/debug")
//    unitTestCompile files("$project.buildDir/classes/debug") ... kotlin
    unitTestCompile 'junit:junit:4.11'
//    unitTestCompile 'org.testng:testng:6.8.8'
//    unitTestCompile 'org.robolectric:robolectric:3.0.1' ... not found :(
//    unitTestCompile 'com.google.android:android:4.0.1.2' ... tutorial uses old version
    unitTestCompile 'com.google.android:android:4.1.1.4'
    unitTestCompile 'org.hamcrest:hamcrest-library:1.3'
    unitTestCompile 'org.mockito:mockito-core:1.10.8'

}

task unitTest(type:Test, dependsOn: assemble) {
    description = "run unit tests"
    testClassesDir = project.sourceSets.unitTest.output.classesDir
    classpath = project.sourceSets.unitTest.runtimeClasspath
}
// check.dependsOn unitTest
build.dependsOn unitTest


android {
    compileSdkVersion 19
    buildToolsVersion "19.1.0"

    packagingOptions {
        // we have to explicitly ignore this classpath file clash for APK generation...
        exclude 'LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/DEPENDENCIES'
    }

    defaultConfig {
        applicationId "at.cpickl.agrotlin"
        minSdkVersion 19
        targetSdkVersion 19
        versionCode 1
        versionName "1.0"
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        // java.srcDirs = ['src/main/java','src/instrumentTest/java']
    }
    buildTypes {
        release {
            runProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        // logback references some JMS, servlet, stuff (javax.management, javax.servlet, ...)
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}

buildscript {
    ext.kotlin_version = '0.9.206'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.android.tools.build:gradle:0.13.+'
    }
}

repositories {
    mavenCentral()
}
